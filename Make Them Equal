
#include <bits/stdc++.h>
using namespace std;
#define int long long int


signed  main() {

    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    vector<int> steps (1001, INT_MAX);
        steps[1]=0;

        for(int i=1; i<=1000; i++){
            for(int j=i;j>=1 ;j--){
                int form = i + i/j;
                if(form > 1000) break;

                steps[form] = min(steps[form] , 1+steps[i]);
            }
        }
  
    cin>>t;
    while(t--){
        int n,k;
        cin>>n>>k;

        int b[n], c[n];
        for(int i=0;i<n;i++) cin>>b[i];
        for(int i=0;i<n;i++) cin>>c[i];

        int sum=0;
        for(int i=0;i<n;i++){
            sum += steps[b[i]];
            b[i]= steps[b[i]];
        }

        if(k >= sum){
            int ans=0;
            for(int i=0;i<n;i++) ans+= c[i];
            cout<<ans<<endl;
            continue;
        }

        vector<vector<int> > dp(n+1, vector<int> (k+1,0));
        for(int i=1;i<=n;i++){
            for(int j=0;j<=k;j++){
                if(j >= b[i-1]) dp[i][j] = dp[i-1][j- b[i-1]] + c[i-1];

                dp[i][j] = max(dp[i][j], dp[i-1][j]);
            }
        }

        cout<<dp[n][k]<<endl;
    }
   
   return 0;
}
